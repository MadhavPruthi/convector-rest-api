Type {
    context: 
     ProjectContext {
       _manipulationSettings: ManipulationSettingsContainer { defaultSettings: [Object], settings: [Object] },
       _compilerOptions: 
        CompilerOptionsContainer {
          defaultSettings: {},
          settings: {},
          _modifiedEventContainer: [Object] },
       _logger: ConsoleLogger { enabled: false },
       _fileSystemWrapper: 
        FileSystemWrapper {
          fileSystem: [Object],
          directories: [Object],
          operationIndex: 0 },
       _compilerFactory: 
        CompilerFactory {
          context: [Circular],
          sourceFileCacheByFilePath: [Object],
          diagnosticCache: [Object],
          definitionInfoCache: [Object],
          documentSpanCache: [Object],
          diagnosticMessageChainCache: [Object],
          jsDocTagInfoCache: [Object],
          signatureCache: [Object],
          symbolCache: [Object],
          symbolDisplayPartCache: [Object],
          referenceEntryCache: [Object],
          referencedSymbolCache: [Object],
          referencedSymbolDefinitionInfoCache: [Object],
          typeCache: [Object],
          typeParameterCache: [Object],
          nodeCache: [Object],
          sourceFileAddedEventContainer: [Object],
          sourceFileMovedEventContainer: [Object],
          sourceFileRemovedEventContainer: [Object],
          documentRegistry: [Object],
          directoryCache: [Object] },
       _structurePrinterFactory: StructurePrinterFactory { _getFormatCodeSettings: [Function] },
       _lazyReferenceCoordinator: LazyReferenceCoordinator { dirtySourceFiles: [Object] },
       _directoryCoordinator: DirectoryCoordinator { compilerFactory: [Object], fileSystemWrapper: [Object] },
       _languageService: 
        LanguageService {
          context: [Circular],
          compilerHost: [Object],
          _compilerObject: [Object],
          program: [Object] } },
    _compilerType: 
     TypeObject {
       checker: 
        { getNodeCount: [Function: getNodeCount],
          getIdentifierCount: [Function: getIdentifierCount],
          getSymbolCount: [Function: getSymbolCount],
          getTypeCount: [Function: getTypeCount],
          isUndefinedSymbol: [Function: isUndefinedSymbol],
          isArgumentsSymbol: [Function: isArgumentsSymbol],
          isUnknownSymbol: [Function: isUnknownSymbol],
          getMergedSymbol: [Function: getMergedSymbol],
          getDiagnostics: [Function: getDiagnostics],
          getGlobalDiagnostics: [Function: getGlobalDiagnostics],
          getTypeOfSymbolAtLocation: [Function: getTypeOfSymbolAtLocation],
          getSymbolsOfParameterPropertyDeclaration: [Function: getSymbolsOfParameterPropertyDeclaration],
          getDeclaredTypeOfSymbol: [Function: getDeclaredTypeOfSymbol],
          getPropertiesOfType: [Function: getPropertiesOfType],
          getPropertyOfType: [Function: getPropertyOfType],
          getTypeOfPropertyOfType: [Function: getTypeOfPropertyOfType],
          getIndexInfoOfType: [Function: getIndexInfoOfType],
          getSignaturesOfType: [Function: getSignaturesOfType],
          getIndexTypeOfType: [Function: getIndexTypeOfType],
          getBaseTypes: [Function: getBaseTypes],
          getBaseTypeOfLiteralType: [Function: getBaseTypeOfLiteralType],
          getWidenedType: [Function: getWidenedType],
          getTypeFromTypeNode: [Function: getTypeFromTypeNode],
          getParameterType: [Function: getTypeAtPosition],
          getReturnTypeOfSignature: [Function: getReturnTypeOfSignature],
          getNullableType: [Function: getNullableType],
          getNonNullableType: [Function: getNonNullableType],
          typeToTypeNode: [Function: typeToTypeNode],
          indexInfoToIndexSignatureDeclaration: [Function: indexInfoToIndexSignatureDeclaration],
          signatureToSignatureDeclaration: [Function: signatureToSignatureDeclaration],
          symbolToEntityName: [Function: symbolToEntityName],
          symbolToExpression: [Function: symbolToExpression],
          symbolToTypeParameterDeclarations: [Function: symbolToTypeParameterDeclarations],
          symbolToParameterDeclaration: [Function: symbolToParameterDeclaration],
          typeParameterToDeclaration: [Function: typeParameterToDeclaration],
          getSymbolsInScope: [Function: getSymbolsInScope],
          getSymbolAtLocation: [Function: getSymbolAtLocation],
          getShorthandAssignmentValueSymbol: [Function: getShorthandAssignmentValueSymbol],
          getExportSpecifierLocalTargetSymbol: [Function: getExportSpecifierLocalTargetSymbol],
          getExportSymbolOfSymbol: [Function: getExportSymbolOfSymbol],
          getTypeAtLocation: [Function: getTypeAtLocation],
          getPropertySymbolOfDestructuringAssignment: [Function: getPropertySymbolOfDestructuringAssignment],
          signatureToString: [Function: signatureToString],
          typeToString: [Function: typeToString],
          symbolToString: [Function: symbolToString],
          typePredicateToString: [Function: typePredicateToString],
          writeSignature: [Function: writeSignature],
          writeType: [Function: writeType],
          writeSymbol: [Function: writeSymbol],
          writeTypePredicate: [Function: writeTypePredicate],
          getAugmentedPropertiesOfType: [Function: getAugmentedPropertiesOfType],
          getRootSymbols: [Function: getRootSymbols],
          getContextualType: [Function: getContextualType],
          getContextualTypeForArgumentAtIndex: [Function: getContextualTypeForArgumentAtIndex],
          getContextualTypeForJsxAttribute: [Function: getContextualTypeForJsxAttribute],
          isContextSensitive: [Function: isContextSensitive],
          getFullyQualifiedName: [Function: getFullyQualifiedName],
          getResolvedSignature: [Function: getResolvedSignature],
          getConstantValue: [Function: getConstantValue],
          isValidPropertyAccess: [Function: isValidPropertyAccess],
          isValidPropertyAccessForCompletions: [Function: isValidPropertyAccessForCompletions],
          getSignatureFromDeclaration: [Function: getSignatureFromDeclaration],
          isImplementationOfOverload: [Function: isImplementationOfOverload],
          getImmediateAliasedSymbol: [Function: getImmediateAliasedSymbol],
          getAliasedSymbol: [Function: resolveAlias],
          getEmitResolver: [Function: getEmitResolver],
          getExportsOfModule: [Function: getExportsOfModuleAsArray],
          getExportsAndPropertiesOfModule: [Function: getExportsAndPropertiesOfModule],
          getSymbolWalker: [Function: getSymbolWalker],
          getAmbientModules: [Function: getAmbientModules],
          getAllAttributesTypeFromJsxOpeningLikeElement: [Function: getAllAttributesTypeFromJsxOpeningLikeElement],
          getJsxIntrinsicTagNamesAt: [Function: getJsxIntrinsicTagNamesAt],
          isOptionalParameter: [Function: isOptionalParameter],
          tryGetMemberInModuleExports: [Function: tryGetMemberInModuleExports],
          tryGetMemberInModuleExportsAndProperties: [Function: tryGetMemberInModuleExportsAndProperties],
          tryFindAmbientModuleWithoutAugmentations: [Function: tryFindAmbientModuleWithoutAugmentations],
          getApparentType: [Function: getApparentType],
          getUnionType: [Function: getUnionType],
          createAnonymousType: [Function: createAnonymousType],
          createSignature: [Function: createSignature],
          createSymbol: [Function: createSymbol],
          createIndexInfo: [Function: createIndexInfo],
          getAnyType: [Function: getAnyType],
          getStringType: [Function: getStringType],
          getNumberType: [Function: getNumberType],
          createPromiseType: [Function: createPromiseType],
          createArrayType: [Function: createArrayType],
          getBooleanType: [Function: getBooleanType],
          getFalseType: [Function: getFalseType],
          getTrueType: [Function: getTrueType],
          getVoidType: [Function: getVoidType],
          getUndefinedType: [Function: getUndefinedType],
          getNullType: [Function: getNullType],
          getESSymbolType: [Function: getESSymbolType],
          getNeverType: [Function: getNeverType],
          isSymbolAccessible: [Function: isSymbolAccessible],
          isArrayLikeType: [Function: isArrayLikeType],
          isTypeInvalidDueToUnionDiscriminant: [Function: isTypeInvalidDueToUnionDiscriminant],
          getAllPossiblePropertiesOfTypes: [Function: getAllPossiblePropertiesOfTypes],
          getSuggestionForNonexistentProperty: [Function: getSuggestionForNonexistentProperty],
          getSuggestionForNonexistentSymbol: [Function: getSuggestionForNonexistentSymbol],
          getSuggestionForNonexistentExport: [Function: getSuggestionForNonexistentExport],
          getBaseConstraintOfType: [Function: getBaseConstraintOfType],
          getDefaultFromTypeParameter: [Function: getDefaultFromTypeParameter],
          resolveName: [Function: resolveName],
          getJsxNamespace: [Function: getJsxNamespace],
          getAccessibleSymbolChain: [Function: getAccessibleSymbolChain],
          getTypePredicateOfSignature: [Function: getTypePredicateOfSignature],
          resolveExternalModuleSymbol: [Function: resolveExternalModuleSymbol],
          tryGetThisTypeAt: [Function: tryGetThisTypeAt],
          getTypeArgumentConstraint: [Function: getTypeArgumentConstraint],
          getSuggestionDiagnostics: [Function: getSuggestionDiagnostics],
          runWithCancellationToken: [Function: runWithCancellationToken] },
       flags: 4,
       id: 10,
       intrinsicName: 'string' } }
  