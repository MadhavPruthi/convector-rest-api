import { BaseGenerator } from './base';
import { ApiConfigurationItem } from '../models/apiConfigurationFile';

export class SwaggerJsonOptions {
    config: ApiConfigurationItem[];
}
export class SwaggerJsonGenerator extends BaseGenerator {
    contents = `{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "Swagger Great Convector Solution",
        "description": "Autogenerated backed for a Convector solution"
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        ${this.options.config.map(item => `"/${item.plainController}/${item.function}": {
            "${item.verb}": {
                "description": "${item.verb} for ${item.plainController} ${item.function}",
                "operationId": "${item.plainController}_${item.function}",
                
            }
        }`).join(',')}
    }
    
    
    import * as express from 'express';
import { ${this.options.config.map(item => `
    ${item.controller}_${item.function}`).join(',')} } from './controllers'
export default express.Router()${this.options.config.map(item => `
.${item.verb}('/${item.plainController}/${item.function}', ${item.controller}_${item.function})`).join('')}
`;

    constructor(filename: string, path: string, private options: SwaggerJsonOptions) {
        super(filename, path);
    }
}